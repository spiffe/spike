#    \\ SPIKE: Secure your secrets with SPIFFE. â€” https://spike.ist/
#  \\\\\ Copyright 2024-present SPIKE contributors.
# \\\\\\\ SPDX-License-Identifier: Apache-2.0

apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/instance: spiffe
    app.kubernetes.io/name: spike-bootstrap
  name: spiffe-spike-bootstrap
  namespace: spike
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: spiffe
        app.kubernetes.io/name: spike-bootstrap
        component: spike-bootstrap
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: check-bootstrap-state
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          # Check if bootstrap already completed (unless forced)
          if [ "$SPIKE_FORCE_BOOTSTRAP" != "true" ]; then
            # Check if any previous bootstrap job completed successfully
            if kubectl get jobs -l app.kubernetes.io/name=spike-bootstrap -o jsonpath='{.items[?(@.status.succeeded>=1)].metadata.name}' | grep -q .; then
              echo "Previous bootstrap job completed successfully. Exiting without running bootstrap."
              # Create a marker that the main container can check
              touch /shared/skip-bootstrap
              exit 0
            fi
          fi
          echo "Bootstrap should proceed"
        env:
        - name: SPIKE_FORCE_BOOTSTRAP
          value: "false"
        volumeMounts:
        - mountPath: /shared
          name: shared-data
      containers:
      - command:
        - /bootstrap
        - -init
        env:
        - name: SPIKE_NEXUS_API_URL
          value: https://spiffe-spike-nexus:443
        - name: SPIFFE_ENDPOINT_SOCKET
          value: unix:///spiffe-workload-api/spire-agent.sock
        - name: SPIKE_SYSTEM_LOG_LEVEL
          value: DEBUG
        - name: SPIKE_TRUST_ROOT
          value: spike.ist
        - name: SPIKE_NEXUS_SHAMIR_SHARES
          value: "3"
        - name: SPIKE_NEXUS_SHAMIR_THRESHOLD
          value: "2"
        - name: SPIKE_NEXUS_KEEPER_PEERS
          value: "https://spiffe-spike-keeper-0.spiffe-spike-keeper-headless:8443,https://spiffe-spike-keeper-1.spiffe-spike-keeper-headless:8443,https://spiffe-spike-keeper-2.spiffe-spike-keeper-headless:8443"
        image: localhost:5000/spike-bootstrap:dev
        imagePullPolicy: IfNotPresent
        name: spiffe-spike-bootstrap
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /spiffe-workload-api
          name: spiffe-workload-api
          readOnly: true
        - mountPath: /shared
          name: shared-data
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1000
        runAsUser: 1000
      serviceAccountName: spiffe-spike-bootstrap
      volumes:
      - csi:
          driver: csi.spiffe.io
          readOnly: true
        name: spiffe-workload-api
      - emptyDir: {}
        name: shared-data
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: spiffe
    app.kubernetes.io/name: spike-bootstrap
  name: spiffe-spike-bootstrap
  namespace: spike
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: spike
  name: spiffe-bootstrap-role
rules:
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spiffe-bootstrap-rolebinding
  namespace: spike
subjects:
- kind: ServiceAccount
  name: spiffe-spike-bootstrap
  namespace: spike
roleRef:
  kind: Role
  name: spiffe-bootstrap-role
  apiGroup: rbac.authorization.k8s.io
